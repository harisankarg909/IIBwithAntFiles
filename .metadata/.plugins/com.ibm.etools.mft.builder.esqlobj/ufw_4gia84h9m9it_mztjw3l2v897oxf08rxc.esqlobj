CREATE DATABASE MODULE XferAdd10_CcnClientRsIn_FINACLE
	DECLARE C_SERVICENAME CONSTANT CHAR 'XferAdd';
	DECLARE C_SERVICEVER  CONSTANT CHAR '10.01';
	DECLARE C_FLOWNAME    CONSTANT CHAR 'XferAdd';
	DECLARE C_FLOWVER     CONSTANT CHAR '10.08';
    DECLARE C_MSGTYPERS   CONSTANT CHAR 'XferAddRs';
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
		-- General Processing - GP
		--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
		-----------------------------------------------------------------------
		-- Populate the environment tree 
		-----------------------------------------------------------------------
	CALL CcnFlowInit(Environment,Root, C_SERVICENAME, C_SERVICEVER, C_FLOWNAME, C_FLOWVER, '01');

		-----------------------------------------------------------------------
	-- Add details about the code the message flow uses 
	-----------------------------------------------------------------------
	IF(CcnFlowInit_AreComponentsDefined() = FALSE) THEN
	    CcnCOMPONENTS_INIT: BEGIN ATOMIC
            IF(CcnFlowInit_AreComponentsDefined() = FALSE) THEN
                CALL XferAdd_FlowInit_AddComponentDetails();
               	CALL XferAdd_XferAddFinetRqRs_FlowInit_AddComponentDetails();
                CALL CcnFlowInit_AddComponents_MepOutIn();
                CALL CcnFlowInit_AddComponents_Finalise();              
            END IF;
	    END CcnCOMPONENTS_INIT;
    END IF;
    
    -----------------------------------------------------------------------
    -- Process the client applications request message
    -----------------------------------------------------------------------
    CALL CcnFlowInit_SetClientMsgSetDetails(Environment, '', 'FIXML', C_MSGTYPERS, 'XMLNSC', 'XML', '');
    --CALL CcnFlowInit_SetClientMsgSetDetails(Environment, '', C_MSGTYPERQ, C_MSGTYPERS, '', '', '');
    
    CALL CcnSetRetainRFH2Header(Environment, Root, TRUE);
    CALL CcnFlowInit_ParseClientRq(Environment, Root, FALSE, FALSE);
    
    -----------------------------------------------------------------------
    -- Message flow admin requests don't contain any business service data 
    -- so if we have received an admin request log it and resume processing
    -- at the next node on the normal path
    -----------------------------------------------------------------------
    
    IF(CcnIsAdminRqMsg(Environment) = TRUE) THEN
        -- Finalise the message flow initialisation
        CALL CcnFlowInit_RqIn_Finalise(Environment, Root);

        -- Do not propagate as admin request processing is complete and
        -- there is nothing more to be done
        RETURN FALSE;
    END IF;    
    
    	
	-----------------------------------------------------------------------
	-- NameSpace Declaration 
	-----------------------------------------------------------------------
	DECLARE NS_eoci   NAMESPACE 'http://www.ejb.ons.ci.infosys.com/executeFinacleScript'; --P1
    DECLARE NS_ccic   NAMESPACE 'http://www.common.ci.infosys.com'; --P2
    
    ---------------------------------------------------------------------------
    -- Get a reference to the request message
    ---------------------------------------------------------------------------    
    DECLARE XferAddRsRef REFERENCE TO Environment;
    CALL CcnGetClientRqRef(Environment, XferAddRsRef);    
    
    
    -- Message related context information
    DECLARE UniqueId CHAR XferAddRsRef.NS_eoci:HEADER.NS_eoci:RESPONSEHEADER.NS_ccic:REQUESTMESSAGEKEY.NS_ccic:REQUESTUUID;
    DECLARE ClientRefId CHAR COALESCE(TRIM(UniqueId),'');
    DECLARE ClientUserId CHAR 'FINACLE'; --CcnGetClientUserId(MsgRqHdrRef);
    CALL CcnFlowInit_MessageIdsAndKeys(Environment, UniqueId, ClientRefId, ClientRefId, ClientUserId);
	

	-- Client related context information
	DECLARE ClientHdrRow ROW;
   	SET ClientHdrRow.ClientAppName = 'FINACLE';
    SET ClientHdrRow.ClientAppVersion = '1.0';
   	SET ClientHdrRow.ClientOrg = '';  
   	SET ClientHdrRow.OptionalId = COALESCE(XferAddRsRef.NS_eoci:HEADER.NS_eoci:RESPONSEHEADER.NS_ccic:REQUESTMESSAGEKEY.NS_ccic:CHANNELID, ' ');
  
    	  
    -- Client related context information
    CALL CcnFlowInit_MessageContext(Environment, ClientHdrRow, '', Root);  
    CALL CcnFlowInit_RqIn_Finalise(Environment, Root);
    
		RETURN TRUE;
	END;

END MODULE;